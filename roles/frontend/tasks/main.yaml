
# - name: install nginx
#   ansible.builtin.dnf:
#     name: nginx
#     state: latest

# - name: start and enable nginx
#   ansible.builtin.service:
#     name: nginx
#     state: started
#     enabled: yes

# # - name: delete default website
#   # ansible.builtin.file:
#     # path: /usr/share/nginx/html/
#     # state: absent
# # 
# # - name: create html directory
#   # ansible.builtin.file:
#     # path: /usr/share/nginx/html/
#     # state: directory
# # 
# # - name: download and extract frontend code
#   # ansible.builtin.unarchive:
#     # src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-frontend-v2.zip
#     # dest: /usr/share/nginx/html/
#     # remote_src: yes

# - name: run app pre-requisites
#   ansible.builtin.import_role:
#     name: common
#     tasks_from: app_pre_req    

# - name: copy backend conf
#   ansible.builtin.template:
#     src: expense.conf.j2
#     dest: /etc/nginx/default.d/expenses.conf 
#   notify:
#     - restart nginx   

# #- name: restart nginx
# # ansible.builtin.service:
# #   name: nginx
# #   state: restarted          

- name: install nginx server
  ansible.builtin.dnf:
    name: nginx
    state: installed

- name: enable and start nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: yes
    
- name: include common role
  include_role:
    name: common
    #tasks_from: main

- name: unzip the code 
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes     


# trigger handler through notify
- name: copy expense config
  ansible.builtin.template:
    src: expense.conf.j2
    dest: /etc/nginx/default.d/expense.conf

- name: restart nginx
  ansible.builtin.service:
    name: nginx
    state: restarted
  notify:
    - restart nginx

  
  